<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CE1" xml:space="preserve">
    <value>CE1: Invalid execution tree, the node type does not exist.</value>
    <comment>Método CreateStringLowerFunction</comment>
  </data>
  <data name="CE10" xml:space="preserve">
    <value>CE10: Error in 'lower' function.</value>
  </data>
  <data name="CE11" xml:space="preserve">
    <value>CE11: Aggregation function without 'apply window of'.</value>
  </data>
  <data name="CE12" xml:space="preserve">
    <value>CE12: Error in 'count' function.</value>
  </data>
  <data name="CE13" xml:space="preserve">
    <value>CE13: Aggregation function without 'apply window of'.</value>
  </data>
  <data name="CE14" xml:space="preserve">
    <value>CE14: Error in 'sum' function.</value>
  </data>
  <data name="CE15" xml:space="preserve">
    <value>CE15: Error in 'apply window of' function.</value>
  </data>
  <data name="CE16" xml:space="preserve">
    <value>CE16: Error in 'top' function.</value>
  </data>
  <data name="CE17" xml:space="preserve">
    <value>CE17: Error in 'top' function."</value>
  </data>
  <data name="CE18" xml:space="preserve">
    <value>CE10: Error in 'buffer with time and size' function.</value>
  </data>
  <data name="CE19" xml:space="preserve">
    <value>CE19: Error in 'where' function.</value>
  </data>
  <data name="CE2" xml:space="preserve">
    <value>CE2: The stack of variables is empty.</value>
  </data>
  <data name="CE20" xml:space="preserve">
    <value>CE20: Error in 'select' function.</value>
  </data>
  <data name="CE21" xml:space="preserve">
    <value>CE21: Error in 'select' function.</value>
  </data>
  <data name="CE22" xml:space="preserve">
    <value>CE22: Error in 'select' function.</value>
  </data>
  <data name="CE23" xml:space="preserve">
    <value>CE23: Error in 'select' function.</value>
  </data>
  <data name="CE24" xml:space="preserve">
    <value>CE24: More than one alias with the same name, check the projection.</value>
  </data>
  <data name="CE25" xml:space="preserve">
    <value>CE25: More than one alias with the same name, the group by sentence.</value>
  </data>
  <data name="CE26" xml:space="preserve">
    <value>CE26: Error in 'group by' function.</value>
  </data>
  <data name="CE27" xml:space="preserve">
    <value>CE27: Error in 'group by' function.</value>
  </data>
  <data name="CE28" xml:space="preserve">
    <value>CE28: Error in 'merge' function.</value>
  </data>
  <data name="CE29" xml:space="preserve">
    <value>CE29: Cannot get the value of the object property {0}.</value>
  </data>
  <data name="CE3" xml:space="preserve">
    <value>CE3: Value type of function 'left' must be string.</value>
  </data>
  <data name="CE30" xml:space="preserve">
    <value>CE30: Error with the Message of the event.</value>
  </data>
  <data name="CE31" xml:space="preserve">
    <value>CE31: Cannot get the event sub-field {0}.</value>
  </data>
  <data name="CE32" xml:space="preserve">
    <value>CE32: Cannot get the event field {0}.</value>
  </data>
  <data name="CE33" xml:space="preserve">
    <value>CE33: Cannot get the event part {0}.</value>
  </data>
  <data name="CE34" xml:space="preserve">
    <value>CE34: Invalid cast.</value>
  </data>
  <data name="CE35" xml:space="preserve">
    <value>CE35: Error with 'like' operation.</value>
  </data>
  <data name="CE36" xml:space="preserve">
    <value>CE36: Error with 'not' operation.</value>
  </data>
  <data name="CE37" xml:space="preserve">
    <value>CE37: Error with greater than or equal '&gt;=' operation.</value>
  </data>
  <data name="CE38" xml:space="preserve">
    <value>CE38: Error with greater than '&gt;' operation.</value>
  </data>
  <data name="CE39" xml:space="preserve">
    <value>CE39: Error with less than or equal '&lt;=' operation.</value>
  </data>
  <data name="CE4" xml:space="preserve">
    <value>CE4: Error in 'left' function.</value>
  </data>
  <data name="CE40" xml:space="preserve">
    <value>CE40: Error with less than '&lt;' operation.</value>
  </data>
  <data name="CE41" xml:space="preserve">
    <value>CE41: Error with not equal '!=' operation.</value>
  </data>
  <data name="CE42" xml:space="preserve">
    <value>CE42: Error with equal '==' operation.</value>
  </data>
  <data name="CE43" xml:space="preserve">
    <value>CE43: Error with substract '-' operation for timespan.</value>
  </data>
  <data name="CE44" xml:space="preserve">
    <value>CE44: Error with substract '-' operation.</value>
  </data>
  <data name="CE45" xml:space="preserve">
    <value>CE45: Error with negate '-' operation.</value>
  </data>
  <data name="CE46" xml:space="preserve">
    <value>CE46: Error with 'and' operation.</value>
  </data>
  <data name="CE47" xml:space="preserve">
    <value>CE47: Error with 'or' operation.</value>
  </data>
  <data name="CE48" xml:space="preserve">
    <value>CE48: Error with datetime or timespan '{0}' function.</value>
  </data>
  <data name="CE49" xml:space="preserve">
    <value>CE49: Cannot get the property '{0}'.</value>
  </data>
  <data name="CE5" xml:space="preserve">
    <value>CE5: Value type of function 'right' must be string.</value>
  </data>
  <data name="CE50" xml:space="preserve">
    <value>CE50: Cannot call 'key' variable without a group by expression.</value>
  </data>
  <data name="CE51" xml:space="preserve">
    <value>CE51: Cannot get the '{0}' of 'group by'.</value>
  </data>
  <data name="CE52" xml:space="preserve">
    <value>CE52: Cannot get '{0}' of 'group by'.</value>
  </data>
  <data name="CE53" xml:space="preserve">
    <value>CE53: Cannot get the value of one of the groups specified in 'group by' sentence.</value>
  </data>
  <data name="CE54" xml:space="preserve">
    <value>CE54: Error in 'order by' function.</value>
  </data>
  <data name="CE55" xml:space="preserve">
    <value>CE55: Error in enumerable ToList function</value>
  </data>
  <data name="CE56" xml:space="preserve">
    <value>CE56: Error in dispose expression for list of events</value>
  </data>
  <data name="CE57" xml:space="preserve">
    <value>CE57: Error in dispose expression for a event</value>
  </data>
  <data name="CE58" xml:space="preserve">
    <value>CE58: Error with where for event lock method.</value>
  </data>
  <data name="CE59" xml:space="preserve">
    <value>CE59: Error with 'where' function.</value>
  </data>
  <data name="CE6" xml:space="preserve">
    <value>CE6: Error in 'right' function.</value>
  </data>
  <data name="CE61" xml:space="preserve">
    <value>CE61: Error with the join projection.</value>
  </data>
  <data name="CE62" xml:space="preserve">
    <value>CE62: Error in enumerable ToArray function</value>
  </data>
  <data name="CE63" xml:space="preserve">
    <value>CE63: Error with the enumerable join.</value>
  </data>
  <data name="CE7" xml:space="preserve">
    <value>CE7: Value type of function 'upper' must be string.</value>
  </data>
  <data name="CE8" xml:space="preserve">
    <value>CE8: Error in 'upper' function.</value>
  </data>
  <data name="CE9" xml:space="preserve">
    <value>CE9: Value type of function 'lower' must be string.</value>
  </data>
</root>